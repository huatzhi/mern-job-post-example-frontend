{"version":3,"sources":["pages/UserTypePage/UserTypePage.component.jsx","config.js","store/auth/auth.types.js","store/auth/auth.reducer.js","store/joblist/joblist.types.js","store/joblist/joblist.reducer.js","store/jobDetails/jobDetails.types.js","store/jobDetails/jobDetails.reducer.js","store/rootReducer.js","store/store.js","services/requests.js","components/RegisterForm/RegisterForm.component.jsx","pages/RecruiterRegistrationPage/RecruiterRegistrationPage.component.jsx","store/auth/auth.actions.js","components/LoginForm/LoginForm.component.jsx","pages/RecruiterLoginPage/RecruiterLoginPage.component.jsx","store/jobDetails/jobDetails.actions.js","components/DescriptionItem/DescriptionItem.component.jsx","components/JobDrawer/JobDrawer.component.jsx","components/CreateJobForm/CreateJobForm.component.jsx","components/TopMenu/TopMenu.component.jsx","components/RecruiterLayout/RecruiterLayout.component.jsx","pages/CreateJobPage/CreateJobPage.component.jsx","store/joblist/joblist.actions.js","components/JobList/JobList.component.jsx","pages/RecruiterJobListPage/RecruiterJobListPage.component.jsx","pages/CandidatePage/CandidatePage.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["UserTypePage","gutter","type","justify","align","className","span","to","config","api_uri","authTypes","LOGIN_SUCCESS","LOGOUT","previousAuth","store","get","initialState","token","name","authReducer","newState","state","action","set","jobListTypes","SET_JOBS","list","jobListReducer","jobs","jobDetailsTypes","SHOW_JOB_DETAIL","HIDE_JOB_DETAIL","job","show","jobDetailsReducer","rootReducer","combineReducers","auth","jobDetail","middlewares","thunk","createStore","RootReducer","applyMiddleware","getToken","getState","requests","path","a","query","axiosConfig","params","headers","Authorization","axios","res","post","body","formItemLayout","labelCol","xs","sm","wrapperCol","tailFormItemLayout","offset","registrationSuccessNotification","history","Modal","success","title","content","onOk","push","registrationErrorNotification","message","notification","error","description","placement","RegisterForm","Item","Form","useForm","form","useHistory","onFinish","formData","console","log","resetFields","response","data","scrollToFirstError","label","QuestionCircleOutlined","rules","required","whitespace","min","max","hasFeedback","Password","dependencies","getFieldValue","validator","rule","value","Promise","reject","resolve","htmlType","RecruiterRegistrationPage","lg","xl","AuthTypes","layout","tailLayout","LoginForm","dispatch","useDispatch","values","output","Error","errorMsg","initialValues","remember","onFinishFailed","errorInfo","RecruiterLoginPage","DescriptionItem","JobDrawer","useSelector","width","closable","onClose","visible","style","marginBottom","recruiterName","location","createdAt","String","Date","CreateJobForm","placeholder","TextArea","rows","size","onClick","getFieldsValue","TopMenu","selectedKey","theme","mode","defaultSelectedKeys","float","Header","Layout","Content","Footer","RecruiterLayout","children","minHeight","padding","textAlign","CreateJobPage","getRecruiterList","getjob","JobList","recruiterList","dataSource","closeJobButtonClicked","item","jobObjId","_id","getListActions","listAction","showJob","onConfirm","okText","cancelText","bordered","renderItem","actions","Meta","id","RecruiterJobListPage","useEffect","CandidatePage","App","isLogin","Boolean","exact","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29bb9572.chunk.js","sourcesContent":["import { Button, Col, Row } from 'antd'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './UserTypePage.styles.css'\r\n\r\nconst UserTypePage = () => {\r\n  return (\r\n    <Row\r\n      gutter={[16, 16]}\r\n      type=\"flex\"\r\n      justify=\"space-around\"\r\n      align=\"middle\"\r\n      className=\"full-vh\"\r\n    >\r\n      <Col span={11}>\r\n        <Link to=\"/candidate\">\r\n          <Button className=\"user-type-button full-screen-row\">\r\n            <span>Candidate</span>\r\n          </Button>\r\n        </Link>\r\n      </Col>\r\n      <Col span={11}>\r\n        <Link to=\"/recruiter/login\">\r\n          <Button className=\"user-type-button full-screen-row\">\r\n            <span>Recruiter</span>\r\n          </Button>\r\n        </Link>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default UserTypePage\r\n","const config = {\r\n  api_uri: \"http://45.77.246.99:9000\",\r\n}\r\n\r\nexport default config;","const authTypes = {\r\n  LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\r\n  LOGOUT: \"LOGOUT\"\r\n}\r\n\r\nexport default authTypes;","import authTypes from \"./auth.types\";\r\nimport store from \"store\";\r\n\r\nconst previousAuth = store.get('auth')\r\n\r\nconst initialState = {\r\n  token: previousAuth && previousAuth.token ? previousAuth.token : null,\r\n  name: previousAuth && previousAuth.name ? previousAuth.name : null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  let newState;\r\n  switch (action.type) {\r\n    case authTypes.LOGIN_SUCCESS:\r\n      newState = { ...state, token: action.token, name: action.name };\r\n      store.set('auth', newState);\r\n      return newState;\r\n    case authTypes.LOGOUT:\r\n      newState = { ...state, token: null, name: null };\r\n      store.set('auth', newState);\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;","const jobListTypes = {\r\n  SET_JOBS: \"SET_JOBS\"\r\n}\r\n\r\nexport default jobListTypes;","import jobListTypes from \"./joblist.types\";\r\n\r\nconst initialState = {\r\n  list: []\r\n};\r\n\r\nconst jobListReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case jobListTypes.SET_JOBS:\r\n      return { ...state, list: action.jobs };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default jobListReducer;","const jobDetailsTypes = {\r\n  SHOW_JOB_DETAIL: \"SHOW_JOB_DETAIL\",\r\n  HIDE_JOB_DETAIL: \"HIDE_JOB_DETAIL\",\r\n}\r\n\r\nexport default jobDetailsTypes;","import jobDetailsTypes from \"./jobDetails.types\";\r\n\r\nconst initialState = {\r\n  job: {},\r\n  show: false\r\n};\r\n\r\nconst jobDetailsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case jobDetailsTypes.SHOW_JOB_DETAIL:\r\n      return { ...state, job: action.job, show: true };\r\n    case jobDetailsTypes.HIDE_JOB_DETAIL:\r\n      return { ...state, show: false };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default jobDetailsReducer;","import { combineReducers } from \"redux\"\r\nimport authReducer from \"./auth/auth.reducer\";\r\nimport jobListReducer from \"./joblist/joblist.reducer\";\r\nimport jobDetailsReducer from \"./jobDetails/jobDetails.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  job: jobListReducer,\r\n  jobDetail: jobDetailsReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\r\nimport RootReducer from \"./rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst middlewares = [thunk];\r\n\r\nif (process.env.NODE_ENV === `development`) {\r\n  const { logger } = require(`redux-logger`);\r\n\r\n  middlewares.push(logger);\r\n}\r\n\r\nconst store = createStore(RootReducer, applyMiddleware(...middlewares));\r\nexport default store;","import axios from 'axios';\r\nimport config from '../config';\r\nimport store from \"../store/store\";\r\n\r\nfunction getToken() {\r\n  const state = store.getState();\r\n  return state.auth.token;\r\n}\r\n\r\nconst requests = {\r\n  get: async (path, query = {}) => {\r\n    const token = getToken();\r\n\r\n    let axiosConfig = { params: query };\r\n    if (token) {\r\n      axiosConfig.headers = { Authorization: token };\r\n    }\r\n\r\n    const res = await axios.get(`${config.api_uri}${path}`, axiosConfig);\r\n    return res;\r\n  },\r\n  post: async (path, body = {}) => {\r\n    const token = getToken();\r\n\r\n    let axiosConfig = {};\r\n    if (token) {\r\n      axiosConfig.headers = { Authorization: token };\r\n    }\r\n\r\n    const res = await axios.post(`${config.api_uri}${path}`, body, axiosConfig);\r\n    return res;\r\n  },\r\n}\r\n\r\nexport default requests;","import React from 'react'\r\nimport {\r\n  Button,\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Modal,\r\n  notification,\r\n  Row,\r\n  Col,\r\n} from 'antd'\r\nimport { QuestionCircleOutlined } from '@ant-design/icons'\r\n\r\nimport './RegisterForm.styles.css'\r\nimport requests from '../../services/requests'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n// styles constants\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n}\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n}\r\n\r\nfunction registrationSuccessNotification(history) {\r\n  Modal.success({\r\n    title: 'Registration Success',\r\n    content: (\r\n      <div>\r\n        <p>You can login now.</p>\r\n      </div>\r\n    ),\r\n    onOk() {\r\n      history.push('/recruiter/login')\r\n    },\r\n  })\r\n}\r\n\r\nfunction registrationErrorNotification(message) {\r\n  notification.error({\r\n    message: `Registration Error`,\r\n    description: message,\r\n    placement: 'bottomLeft',\r\n  })\r\n}\r\n\r\n// components\r\nconst RegisterForm = () => {\r\n  const { Item } = Form\r\n  const [form] = Form.useForm()\r\n  const history = useHistory()\r\n\r\n  const onFinish = async (formData) => {\r\n    console.log('formData:', formData)\r\n    try {\r\n      await requests.post('/recruiter/register', formData)\r\n      form.resetFields()\r\n      registrationSuccessNotification(history)\r\n    } catch (e) {\r\n      if (e && e.response && e.response.data && e.response.data.message) {\r\n        registrationErrorNotification(e.response.data.message)\r\n      } else {\r\n        registrationErrorNotification('Unknown Error')\r\n        console.error(e)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      {...formItemLayout}\r\n      name=\"register\"\r\n      form={form}\r\n      onFinish={onFinish}\r\n      scrollToFirstError\r\n    >\r\n      <Item\r\n        name=\"name\"\r\n        label={\r\n          <span>\r\n            Name&nbsp;\r\n            <Tooltip title=\"What do you want others to call you?\">\r\n              <QuestionCircleOutlined />\r\n            </Tooltip>\r\n          </span>\r\n        }\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your name!',\r\n            whitespace: true,\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Item>\r\n\r\n      <Item\r\n        name=\"email\"\r\n        label=\"Email\"\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: 'The input is not valid E-mail!',\r\n          },\r\n          {\r\n            required: true,\r\n            message: 'Please input your E-mail!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Item>\r\n\r\n      <Item\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            min: 6,\r\n            max: 30,\r\n            message: 'Password have to be 6-30 characters',\r\n          },\r\n        ]}\r\n        hasFeedback\r\n      >\r\n        <Input.Password />\r\n      </Item>\r\n\r\n      <Item\r\n        name=\"confirm\"\r\n        label=\"Confirm Password\"\r\n        dependencies={['password']}\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please confirm your password!',\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(rule, value) {\r\n              if (!value || getFieldValue('password') === value) {\r\n                return Promise.resolve()\r\n              }\r\n              return Promise.reject(\r\n                'The two passwords that you entered do not match!'\r\n              )\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Item>\r\n\r\n      <Item {...tailFormItemLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Register\r\n        </Button>\r\n      </Item>\r\n      <Row justify=\"center\">\r\n        <Col span={24}>\r\n          Already have an account?{' '}\r\n          <Button type=\"link\">\r\n            <Link to=\"/recruiter/login\">Login Here</Link>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"center\">\r\n        <Col span={24}>\r\n          <Button type=\"link\">\r\n            <Link to=\"/\">Back To Home</Link>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default RegisterForm\r\n","import { Col, Row } from 'antd'\r\nimport React from 'react'\r\nimport RegisterForm from '../../components/RegisterForm/RegisterForm.component'\r\n\r\nimport './RecruiterRegistrationPage.styles.css'\r\n\r\nconst RecruiterRegistrationPage = () => {\r\n  return (\r\n    <Row type=\"flex\" justify=\"space-around\" align=\"middle\" className=\"full-vh\">\r\n      <Col\r\n        xs={{ span: 24 }}\r\n        sm={{ span: 12 }}\r\n        lg={{ span: 8 }}\r\n        xl={{ span: 6 }}\r\n      >\r\n        <RegisterForm />\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default RecruiterRegistrationPage\r\n","import AuthTypes from \"./auth.types\"\r\n\r\nexport const LOGIN_SUCCESS = (name, token) => ({\r\n  type: AuthTypes.LOGIN_SUCCESS,\r\n  name,\r\n  token\r\n})\r\n\r\nexport const LOGOUT = () => ({\r\n  type: AuthTypes.LOGOUT\r\n})","import React from 'react'\r\nimport { Form, Input, Button, Modal, Row, Col } from 'antd'\r\nimport './LoginForm.styles.css'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport requests from '../../services/requests'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { LOGIN_SUCCESS } from '../../store/auth/auth.actions'\r\n\r\n// styles\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n}\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n}\r\n\r\n// component\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const onFinish = async (values) => {\r\n    console.log('Success:', values)\r\n    try {\r\n      let output = await requests.post('/recruiter/login', values)\r\n      console.log(output.data)\r\n      if (!output || !output.data || !output.data.name || !output.data.token) {\r\n        throw new Error('Unknown error')\r\n      }\r\n      const { name, token } = output.data\r\n\r\n      dispatch(LOGIN_SUCCESS(name, token))\r\n      history.push('/recruiter/job-list')\r\n    } catch (e) {\r\n      let errorMsg = 'Unknown Error'\r\n      if (e && e.response && e.response.data && e.response.data.message) {\r\n        errorMsg = e.response.data.message\r\n      } else {\r\n        console.error('Login error', e)\r\n      }\r\n\r\n      Modal.error({\r\n        title: 'Login Failed',\r\n        content: (\r\n          <div>\r\n            <p>{errorMsg}</p>\r\n          </div>\r\n        ),\r\n      })\r\n    }\r\n  }\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        {...layout}\r\n        name=\"Login\"\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          rules={[\r\n            { required: true, message: 'Please input your email!' },\r\n            {\r\n              type: 'email',\r\n              message: 'Must be a valid email address!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          rules={[{ required: true, message: 'Please input your password!' }]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Login\r\n          </Button>\r\n        </Form.Item>\r\n        <Row justify=\"center\">\r\n          <Col span={24}>\r\n            Do not have account?{' '}\r\n            <Button type=\"link\">\r\n              <Link to=\"/recruiter/register\">Register Here</Link>\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row justify=\"center\">\r\n          <Col span={24}>\r\n            <Button type=\"link\">\r\n              <Link to=\"/\">Back To Home</Link>\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import React from 'react'\r\nimport LoginForm from '../../components/LoginForm/LoginForm.component'\r\nimport { Col, Row } from 'antd'\r\n\r\nimport './RecruiterLoginPage.styles.css'\r\n\r\nconst RecruiterLoginPage = () => {\r\n  return (\r\n    <Row type=\"flex\" justify=\"space-around\" align=\"middle\" className=\"full-vh\">\r\n      <Col\r\n        xs={{ span: 24 }}\r\n        sm={{ span: 12 }}\r\n        lg={{ span: 8 }}\r\n        xl={{ span: 6 }}\r\n      >\r\n        <LoginForm />\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default RecruiterLoginPage\r\n","import jobDetailsTypes from \"./jobDetails.types\";\r\n\r\nexport const SHOW_JOB_DETAIL = (job) => ({\r\n  type: jobDetailsTypes.SHOW_JOB_DETAIL,\r\n  job\r\n});\r\n\r\nexport const HIDE_JOB_DETAIL = () => ({\r\n  type: jobDetailsTypes.HIDE_JOB_DETAIL\r\n});","import React from 'react'\r\n\r\nimport './DescriptionItem.styles.css'\r\n\r\nconst DescriptionItem = ({ title, content }) => (\r\n  <div className=\"site-description-item-profile-wrapper\">\r\n    {title ? (\r\n      <p className=\"site-description-item-profile-p-label\">{title}:</p>\r\n    ) : null}\r\n\r\n    {content}\r\n  </div>\r\n)\r\n\r\nexport default DescriptionItem\r\n","import React from 'react'\r\nimport { Col, Divider, Drawer, Row } from 'antd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport './JobDrawer.styles.css'\r\nimport DescriptionItem from '../DescriptionItem/DescriptionItem.component'\r\nimport { HIDE_JOB_DETAIL } from '../../store/jobDetails/jobDetails.actions'\r\n\r\nconst JobDrawer = () => {\r\n  const { show, job } = useSelector((state) => state.jobDetail)\r\n  const dispatch = useDispatch()\r\n\r\n  const onClose = () => {\r\n    dispatch(HIDE_JOB_DETAIL())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        width={640}\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={onClose}\r\n        visible={show}\r\n      >\r\n        <p\r\n          className=\"site-description-item-profile-p\"\r\n          style={{ marginBottom: 24 }}\r\n        >\r\n          <h2>{job.title}</h2>\r\n        </p>\r\n        <Row>\r\n          <Col span={12}>\r\n            <DescriptionItem\r\n              title=\"Recruiter Name\"\r\n              content={job.recruiterName}\r\n            />\r\n          </Col>\r\n          <Col span={12}>\r\n            <DescriptionItem title=\"Location\" content={job.location} />\r\n          </Col>\r\n        </Row>\r\n        <Divider />\r\n        <p className=\"site-description-item-profile-p\">Job Description</p>\r\n        <Row>\r\n          <Col span={24}>\r\n            <DescriptionItem content={job.description} />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Divider />\r\n        <Row>\r\n          <Col span={24}>\r\n            <DescriptionItem\r\n              title=\"Job Post Date\"\r\n              content={job.createdAt ? String(new Date(job.createdAt)) : '-'}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Drawer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default JobDrawer\r\n","import React from 'react'\r\nimport { Form, Input, Button, notification, Space } from 'antd'\r\n\r\nimport './CreateJobForm.styles.css'\r\nimport requests from '../../services/requests'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { SHOW_JOB_DETAIL } from '../../store/jobDetails/jobDetails.actions'\r\nimport JobDrawer from '../JobDrawer/JobDrawer.component'\r\n\r\nconst CreateJobForm = () => {\r\n  const [form] = Form.useForm()\r\n  const dispatch = useDispatch()\r\n  const { name } = useSelector((state) => state.auth)\r\n\r\n  const onFinish = async (formData) => {\r\n    console.log('formData', formData)\r\n    try {\r\n      await requests.post('/job/', formData)\r\n      form.resetFields()\r\n      notification.success({\r\n        message: `Job create SUCCESSFUL!`,\r\n        placement: 'bottomLeft',\r\n      })\r\n    } catch (e) {\r\n      let errorMsg = 'Unknown Error'\r\n      if (e && e.response && e.response.data && e.response.data.message) {\r\n        errorMsg = e.response.data.message\r\n      } else {\r\n        console.error('Login error', e)\r\n      }\r\n      notification.error({\r\n        message: 'Job creation FAILED!',\r\n        description: errorMsg,\r\n        placement: 'bottomLeft',\r\n      })\r\n    }\r\n  }\r\n\r\n  const preview = () => {\r\n    let job = form.getFieldsValue()\r\n    job.recruiterName = name\r\n    dispatch(SHOW_JOB_DETAIL(job))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form form={form} name=\"create-job\" onFinish={onFinish} layout=\"vertical\">\r\n        <Form.Item\r\n          name=\"title\"\r\n          label=\"Title\"\r\n          rules={[{ required: true, message: 'Please input title!' }]}\r\n        >\r\n          <Input placeholder=\"(e.g. Software Engineer)\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"location\"\r\n          label=\"Location\"\r\n          rules={[{ required: true, message: 'Please input location!' }]}\r\n        >\r\n          <Input placeholder=\"(e.g. New York)\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"description\"\r\n          label=\"Job Description\"\r\n          rules={[{ required: true, message: 'Please input description!' }]}\r\n        >\r\n          <Input.TextArea\r\n            placeholder=\"Insert your job description here.\"\r\n            rows={20}\r\n          />\r\n        </Form.Item>\r\n        <Space size=\"middle\">\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"secondary\" onClick={preview}>\r\n              Preview\r\n            </Button>\r\n          </Form.Item>\r\n        </Space>\r\n      </Form>\r\n      <JobDrawer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateJobForm\r\n","import { Menu } from 'antd'\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { LOGOUT } from '../../store/auth/auth.actions'\r\n\r\nimport './TopMenu.styles.css'\r\n\r\nconst TopMenu = ({ selectedKey = 'Create Job' }) => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const logout = () => {\r\n    dispatch(LOGOUT())\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={selectedKey}>\r\n      <Menu.Item key=\"Home\">\r\n        <Link to=\"/\">Home</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"Create Job\">\r\n        <Link to=\"/recruiter/create-job\">Create Job</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"Job List\">\r\n        <Link to=\"/recruiter/job-list\">Job List</Link>\r\n      </Menu.Item>\r\n      <Menu.Item style={{ float: 'right' }} onClick={logout}>\r\n        Logout\r\n      </Menu.Item>\r\n    </Menu>\r\n  )\r\n}\r\n\r\nexport default TopMenu\r\n","import React from 'react'\r\n\r\nimport './RecruitmentLayout.styles.css'\r\n\r\nimport TopMenu from '../TopMenu/TopMenu.component'\r\nimport { Layout } from 'antd'\r\n\r\nconst { Header, Content, Footer } = Layout\r\n\r\nconst RecruiterLayout = ({ selectedKey = 'Create Job', children }) => {\r\n  return (\r\n    <Layout className=\"layout\" style={{ minHeight: '100vh' }}>\r\n      <Header>\r\n        <TopMenu selectedKey={selectedKey} />\r\n      </Header>\r\n      <Content style={{ padding: '0 50px' }}>\r\n        <div className=\"site-layout-content\">{children}</div>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}>\r\n        Job App ©2020 Created by Someone\r\n      </Footer>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default RecruiterLayout\r\n","import React from 'react'\r\nimport CreateJobForm from '../../components/CreateJobForm/CreateJobForm.component'\r\nimport RecruiterLayout from '../../components/RecruiterLayout/RecruiterLayout.component'\r\n\r\nimport './CreateJobPage.styles.css'\r\n\r\nconst CreateJobPage = () => {\r\n  return (\r\n    <RecruiterLayout selectedKey=\"Create Job\">\r\n      <CreateJobForm />\r\n    </RecruiterLayout>\r\n  )\r\n}\r\n\r\nexport default CreateJobPage\r\n","import { notification } from \"antd\"\r\nimport requests from \"../../services/requests\"\r\nimport jobListTypes from \"./joblist.types\"\r\n\r\n\r\nexport const SET_JOBS = (jobs) => (\r\n  {\r\n    type: jobListTypes.SET_JOBS,\r\n    jobs\r\n  }\r\n)\r\n\r\nexport const getRecruiterList = () => {\r\n  return async dispatch => {\r\n    try {\r\n      const getjob = await requests.get('/recruiter/job')\r\n      const jobs = getjob.data || []\r\n      dispatch(SET_JOBS(jobs))\r\n    } catch (e) {\r\n      let errorMsg = 'Unknown Error'\r\n      if (e && e.response && e.response.data && e.response.data.message) {\r\n        errorMsg = e.response.data.message\r\n      } else {\r\n        console.error('Login error', e)\r\n      }\r\n      notification.error({\r\n        message: `Get Recruiter Job Error`,\r\n        description: errorMsg,\r\n        placement: 'bottomLeft',\r\n      })\r\n      dispatch(SET_JOBS([]))\r\n    }\r\n  }\r\n}\r\n\r\nexport const getList = () => {\r\n  return async dispatch => {\r\n    try {\r\n      const getjob = await requests.get('/job')\r\n      const jobs = getjob.data || []\r\n      dispatch(SET_JOBS(jobs))\r\n    } catch (e) {\r\n      let errorMsg = 'Unknown Error'\r\n      if (e && e.response && e.response.data && e.response.data.message) {\r\n        errorMsg = e.response.data.message\r\n      } else {\r\n        console.error('Login error', e)\r\n      }\r\n      notification.error({\r\n        message: `Get Job Error`,\r\n        description: errorMsg,\r\n        placement: 'bottomLeft',\r\n      })\r\n      dispatch(SET_JOBS([]))\r\n    }\r\n  }\r\n}\r\n\r\nexport const closeJob = jobObjId => {\r\n  return async dispatch => {\r\n    try {\r\n      await requests.post('/job/close', { jobObjId })\r\n      notification.success({\r\n        message: `Job Deleted!`,\r\n        placement: 'bottomLeft',\r\n      })\r\n    } catch (e) {\r\n      let errorMsg = 'Unknown Error'\r\n      if (e && e.response && e.response.data && e.response.data.message) {\r\n        errorMsg = e.response.data.message\r\n      } else {\r\n        console.error('Login error', e)\r\n      }\r\n      notification.error({\r\n        message: `Close Job Failed`,\r\n        description: errorMsg,\r\n        placement: 'bottomLeft',\r\n      })\r\n    } finally {\r\n      dispatch(getRecruiterList())\r\n    }\r\n  }\r\n}","import React from 'react'\r\nimport { Button, List, Popconfirm } from 'antd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { SHOW_JOB_DETAIL } from '../../store/jobDetails/jobDetails.actions'\r\nimport JobDrawer from '../JobDrawer/JobDrawer.component'\r\nimport { closeJob } from '../../store/joblist/joblist.actions'\r\n\r\nconst JobList = ({ recruiterList }) => {\r\n  const dataSource = useSelector((state) => state.job.list)\r\n  const dispatch = useDispatch()\r\n\r\n  const showJob = (item) => {\r\n    dispatch(SHOW_JOB_DETAIL(item))\r\n  }\r\n\r\n  const closeJobButtonClicked = (item) => {\r\n    dispatch(closeJob(item._id))\r\n  }\r\n\r\n  const getListActions = (item) => {\r\n    let listAction = [\r\n      <Button\r\n        type=\"link\"\r\n        onClick={() => {\r\n          showJob(item)\r\n        }}\r\n      >\r\n        View Job\r\n      </Button>,\r\n    ]\r\n\r\n    if (recruiterList) {\r\n      listAction.push(\r\n        <Popconfirm\r\n          title=\"Are you sure delete this job?\"\r\n          onConfirm={() => {\r\n            closeJobButtonClicked(item)\r\n          }}\r\n          okText=\"Yes\"\r\n          cancelText=\"No\"\r\n        >\r\n          <Button type=\"danger\">Close</Button>\r\n        </Popconfirm>\r\n      )\r\n    }\r\n\r\n    return listAction\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <List\r\n        dataSource={dataSource}\r\n        bordered\r\n        renderItem={(item) => (\r\n          <List.Item key={item.id} actions={getListActions(item)}>\r\n            <List.Item.Meta\r\n              title={item.title}\r\n              description={`${item.recruiterName || ''} - ${\r\n                item.location || ''\r\n              }`}\r\n            />\r\n          </List.Item>\r\n        )}\r\n      />\r\n      <JobDrawer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default JobList\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport JobList from '../../components/JobList/JobList.component'\r\nimport RecruiterLayout from '../../components/RecruiterLayout/RecruiterLayout.component'\r\nimport { getRecruiterList } from '../../store/joblist/joblist.actions'\r\n\r\nimport './RecruiterJobListPage.styles.css'\r\n\r\nconst RecruiterJobListPage = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getRecruiterList())\r\n  })\r\n\r\n  return (\r\n    <RecruiterLayout selectedKey=\"Job List\">\r\n      <JobList recruiterList />\r\n    </RecruiterLayout>\r\n  )\r\n}\r\n\r\nexport default RecruiterJobListPage\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Layout, Menu } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\nimport JobList from '../../components/JobList/JobList.component'\r\nimport { getList } from '../../store/joblist/joblist.actions'\r\n\r\nconst CandidatePage = () => {\r\n  const { Header, Content, Footer } = Layout\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getList())\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Layout className=\"layout\" style={{ minHeight: '100vh' }}>\r\n        <Header>\r\n          <Menu theme=\"dark\" mode=\"horizontal\">\r\n            <Menu.Item key=\"1\">\r\n              <Link to=\"/\">Home</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\">\r\n              <Link to=\"/candidate\">Candidate View Job</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Header>\r\n        <Content style={{ padding: '0 50px' }}>\r\n          <div className=\"site-layout-content\">\r\n            <JobList />\r\n          </div>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center' }}>\r\n          Job App ©2020 Created by Someone\r\n        </Footer>\r\n      </Layout>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CandidatePage\r\n","import React from 'react';\nimport './App.css';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport UserTypePage from './pages/UserTypePage/UserTypePage.component';\nimport RecruiterRegistrationPage from './pages/RecruiterRegistrationPage/RecruiterRegistrationPage.component';\nimport RecruiterLoginPage from './pages/RecruiterLoginPage/RecruiterLoginPage.component';\nimport CreateJobPage from './pages/CreateJobPage/CreateJobPage.component';\nimport RecruiterJobListPage from './pages/RecruiterJobListPage/RecruiterJobListPage.component';\nimport CandidatePage from './pages/CandidatePage/CandidatePage.component';\n\n\n\nfunction App() {\n  const isLogin = useSelector(state => Boolean(state.auth.token));\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={UserTypePage} />\n        <Route path=\"/candidate\" component={CandidatePage} />\n        <Route path=\"/recruiter/register\" render={() => (\n          !isLogin ? <RecruiterRegistrationPage /> : <Redirect to=\"/recruiter/job-list\" />\n        )} />\n        <Route path=\"/recruiter/login\" render={() => (\n          !isLogin ? <RecruiterLoginPage /> : <Redirect to=\"/recruiter/job-list\" />\n        )} />\n        <Route path=\"/recruiter/create-job\" render={() => (\n          isLogin ? <CreateJobPage /> : <Redirect to=\"/recruiter/login\" />\n        )} />\n        <Route path=\"/recruiter/job-list\" render={() => (\n          isLogin ? <RecruiterJobListPage /> : <Redirect to=\"/recruiter/login\" />\n        )} />\n        <Route path=\"/\" component={(() => (<Redirect to=\"/\" />))} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}